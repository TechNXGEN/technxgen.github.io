<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on NXGEN - Tech Blog</title><link>https://nxgen.tech/tags/python/</link><description>Recent content in Python on NXGEN - Tech Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 01 Jan 2025 17:41:24 -0500</lastBuildDate><atom:link href="https://nxgen.tech/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Streamline code analysis with AI chatbots using source code gatherer</title><link>https://nxgen.tech/blog/2025/01/01/streamline-code-analysis-with-ai-chatbots-using-source-code-gatherer/</link><pubDate>Wed, 01 Jan 2025 00:00:00 +0000</pubDate><guid>https://nxgen.tech/blog/2025/01/01/streamline-code-analysis-with-ai-chatbots-using-source-code-gatherer/</guid><description>&lt;div class="pageinfo pageinfo-primary">
&lt;p>Discover how to enhance your code analysis workflow using AI chatbots with a simple Python script that gathers source code from specified project folders. This tool helps you prepare your code for AI analysis while maintaining full control over the context provided to the AI.&lt;/p>

&lt;/div>

&lt;h2 id="introduction">Introduction&lt;a class="td-heading-self-link" href="#introduction" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>While integrated development environments (IDEs) offer sophisticated code analysis tools, AI chatbots like Claude and ChatGPT have emerged as powerful alternatives for code understanding, documentation, and problem-solving. However, feeding your codebase to these AI tools can be cumbersome. This article introduces a simple Python script that streamlines this process by gathering all source code from a specified directory into a single text file.&lt;/p></description></item><item><title>Building an Audiobook Processor: Splitting and Converting M4B Files for Car Audio</title><link>https://nxgen.tech/blog/2024/11/10/building-an-audiobook-processor-splitting-and-converting-m4b-files-for-car-audio/</link><pubDate>Sun, 10 Nov 2024 00:00:00 +0000</pubDate><guid>https://nxgen.tech/blog/2024/11/10/building-an-audiobook-processor-splitting-and-converting-m4b-files-for-car-audio/</guid><description>&lt;div class="pageinfo pageinfo-primary">
&lt;p>Learn how to build a Python script that processes M4B audiobook files into smaller, more manageable MP3 chunks while preserving audio quality and providing flexible customization options.&lt;/p>

&lt;/div>

&lt;h2 id="the-challenge-car-audio-and-audiobooks">The Challenge: Car Audio and Audiobooks&lt;a class="td-heading-self-link" href="#the-challenge-car-audio-and-audiobooks" aria-label="Heading self-link">&lt;/a>&lt;/h2>
&lt;p>Modern audiobooks often come in M4B format, which while great for dedicated audiobook players, can present challenges when used with simpler audio systems like car stereos. I recently faced this exact problem: I had a lengthy audiobook I wanted to listen to during my commute, but my car&amp;rsquo;s audio system had two major limitations:&lt;/p></description></item></channel></rss>